import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

public class FenetreCercleAnim extends JFrame implements ActionListener{
	
	private Panneau pan = new Panneau();
	private JPanel container = new JPanel();
	private JLabel jl = new JLabel("My Jlabel");
	private Bouton bouton = new Bouton("Mon bouton");
	private JButton bout1 = new JButton("1st ONE");
	private JButton bout2 = new JButton("2nd ONE");
	private int compteur = 0;
	
	
	public FenetreCercleAnim(){
		this.setTitle("My First Animation in Java!");
		this.setSize(500,500);
		this.setLocationRelativeTo(null);
		this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

		container.setBackground(Color.white);
		container.setLayout(new BorderLayout());
		container.add(pan, BorderLayout.CENTER);
		
		bout1.addActionListener(this);
		bout2.addActionListener(this);
		JPanel south = new JPanel();
		south.add(bout1);
		south.add(bout2);
		container.add(south, BorderLayout.SOUTH);
		
		
		
		  //Définition d'une police d'écriture
		  Font police = new Font("Tahoma", Font.BOLD, 16);
		  //On l'applique au JLabel
		  jl.setFont(police);
		  //Changement de la couleur du texte
		  jl.setForeground(Color.blue);
		  //On modifie l'alignement du texte grâce aux attributs statiques
		  //de la classe JLabel
		  jl.setHorizontalAlignment(JLabel.CENTER);
		        
		container.add(jl, BorderLayout.NORTH);
		
		
		
		this.setContentPane(container);
		this.setVisible(true);
		
		go();
	}
	// Effet d'une balle qui rebondi contre les bords de la fénètre  
		private void go() {
//			//for(int i=-50; i<pan.getWidth(); i++) {
				//Coordonnée de départ du cerlce
				int x = pan.getPosX();
				int y = pan.getPosY();
				// Le booléen pour savoir so l'on recule ou non sur l'axe X
				boolean backX = false;
				// Le booléen pour savoir so l'on recule ou non sur l'axe Y
				boolean backY = false;
				
				while(true) {
					// Si la coordonnée x est inférieur à 1, on avance
					if (x < 1)  
						backX = false;
				
					//Si la coordonnée x est supérieur à la taille du panneau moins la taille du rond, on recule
					if(x > pan.getWidth() - 50)
						backX=true;
					
					//Idem pour Y
					if (y < 1)
						backY = false;
					if(y > pan.getHeight() - 50)
						backY = true;
					
					//Si on avance on incrémente la coordonnées
					//backX est un booléen, donc !backX revient à écrire
					// if(backX == false)
					if(!backX) 
						pan.setPosX(++x);
					else 
						pan.setPosX(--x);
					
	
	
					if(!backY)
						pan.setPosY(++y);					
					else 
						pan.setPosY(--y);
					
					
				pan.repaint();
				try {
					Thread.sleep(3);
				}catch(InterruptedException e) {
					e.printStackTrace();
				}	
			}
		}
		
		public void actionPerformed(ActionEvent arg0) {
			if(arg0.getSource() == bout1)
			jl.setText("Tou clicked : sur l'bouton 1 ");
			if(arg0.getSource() == bout2)
			jl.setText("Tou clicked : sur l'bouton 2 ");
		}
}

